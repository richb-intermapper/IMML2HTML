<!-- 
	Xserve (com.dartware.tcp.xserve.details)
	Copyright © 2002-2007 Dartware, LLC. All rights reserved.
-->

<header>
	type			= 	"tcp-script"
	package			= 	"com.dartware"
	probe_name		=	"tcp.xserve.deails"
	human_name		=	"Xserve G4"
	version			= 	"1.9"
	address_type		= 	"IP"
	port_number		=	"311"
	display_name		=	"Servers-Proprietary/Apple/Xserve/Xserve G4"
</header>

<description>

\GB\Xserve G4 Probe\P\

This TCP probe queries an Xserve G4 for various details using the Server Monitor port and protocol.
\B\This probe will monitor Xserve G4s running Mac OS X 10.3.9 and earlier.  For Xserves running 10.4 or later, please choose the Xserve Tiger probe.\P\

A request for status information is made via an HTTPS post to the Server Monitor port. The server responds with XML data that is then parsed by the probe.

\i\User\p\ is the name of any user on the specified server.

\i\Password\p\ is the password for the user specified in \i\User\p\.

\i\OS Version\p\ specifies the version of Mac OS X Server that is running on the Xserve.

The remaining options allow you to display or ignore the corresponding data. These options correspond to the tabs in the Server Monitor application on Mac OS X Server.

\i\Info\p\ is general information about the server, such as amount of RAM and OS name and version.

\i\Drives\p\ is information about the various drives installed on the server. This information includes the manufacturer, model, and capacity of each drive.

\i\Power\p\ is information pertaining to the power supply.

\i\Network\p\ information includes the hardware address, IP address, traffic information, and type of each interface.

\i\Temperature\p\ is the ambient temperature of the server.

\i\Blowers\p\ is information on the speed of the server's cooling fans.

\i\Security\p\ monitors the state of the security lock and the enclosure.

\i3\Note: The implementation of this probe uses OpenSSL on MacOSX.\p0\

</description>

<parameters>

	"User"				=		""
	"Password*"			=		""
	"Info[Show,Ignore]"		=		"Show"
	"Drives[Show,Ignore]"		=		"Show"
	"Power[Show,Ignore]"		=		"Show"
	"Network[Show,Ignore]"		=		"Show"
	"Temperature[Show,Ignore]"	=		"Show"
	"Blowers[Show,Ignore]"		=		"Show"
	"Security[Show,Ignore]"		=		"Show"
	"OS Version[10.3 or later,10.2 or earlier]"	=	"10.3 or later"

</parameters>

<script>
CONN #60 "SECURE"
FAIL @FAIL_INIT

STOR "RET" "@START"
GOTO #+2

@FAIL_INIT:
STOR "RET" "@FAILED"

GOTO @INIT_VARS

@START:


WAIT #30 @IDLE (idle timeout in secs)
DISC @DISCONNECT

SBNE "${OS Version[10.3 or later,10.2 or earlier]}" "10.3 or later"i @JAGUAR

STOR "URL" "/commands/servermgr_xserve"
STOR "FormData1" "input=%3C?xml%20version=%221.0%22%20encoding=%22UTF-8%22?%3E%0A%3C!DOCTYPE%20plist%20PUBLIC%20%22-%2F%2FApple%20Computer"
STOR "FormData2" "%2F%2FDTD%20PLIST%201.0%2F%2FEN%22%20%22http:%2F%2Fwww.apple.com%2FDTDs%2FPropertyList-1.0.dtd%22%3E%0A%3Cplist%20version"
STOR "FormData3" "=%221.0%22%3E%0A%3Cdict%3E%0A%09%3Ckey%3Ecommand%3C%2Fkey%3E%0A%09%3Cstring%3Estatus%3C%2Fstring%3E%0A%3C%2Fdict%3E%0A%3C%2Fplist%3E%0A"
GOTO @SEND_POST

@JAGUAR:
STOR "URL" "/commands/servermgr_p69"

STOR "FormData1" "input=%3C?xml%20version=%221.0%22%20encoding=%22UTF-8%22?%3E%0A%3C!DOCTYPE%20plist%20SYSTEM%20%22file://localhost/Syst"
STOR "FormData2" "em/Library/DTDs/PropertyList.dtd%22%3E%0A%3Cplist%20version=%220.9%22%3E%0A%3Cdict%3E%0A%09%3Ckey%3Ecommand"
STOR "FormData3" "%3C/key%3E%0A%09%3Cstring%3Estatus%3C/string%3E%0A%3C/dict%3E%0A%3C/plist%3E%0A"

@SEND_POST:
SEND "POST ${URL} HTTP/1.0\r\n"
CHCK "${_REMOTEADDRESS}" else goto #+2
SEND "Host: ${_REMOTEADDRESS}\r\n"
#	SEND "Content-type: text/xml\r\n"
STOR "LEN" "${_LENGTH:${FormData1}}"
NADD "LEN" #${_LENGTH:${FormData2}}
NADD "LEN" #${_LENGTH:${FormData3}}
SEND "Content-Length: ${LEN}\r\n"
CHCK "${User}${Password*}" else goto #+2
SEND "Authorization: Basic ${_BASE64:${User}:${Password*}}\r\n"
SEND "\r\n"
SEND "${FormData1}"
SEND "${FormData2}"
SEND "${FormData3}"

MTCH "HTTP/"i else goto @UNEXPECTED_GREETING
MTCH "200" else goto @UNAVAIL_GET_RESPONSE
LINE HTML
DISC if disconnected goto @NO_MATCH

EXPT "<key>"i else goto @NO_MATCH

#a switch...case structure here should search for all known keys
#		(Email, Status)
@ROOT_SWITCH:
MTCH "<key>Email</key>"i ELSE #+2
GOTO @EMAIL
MTCH "<key>Status</key>"i ELSE #+2
GOTO @STATUS
MTCH "<key>error</key>"i ELSE #+4
NEXT
MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir ELSE #+2
DONE WARN "[Xserve] Error: ${2}"
#fallthrough to @NO_MATCH

@NO_MATCH:
#If we ignored the last element of data, then we got here from the STATUS loop, and everything is (probably) OK
#	To reproduce, ignore Temperature with the input from the end of this file.
SBNE "Ignore" "${${1}[Show,Ignore]}"i #+2
DONE OKAY
DONE WARN "[Xserve] Improperly formed data in response."

@IDLE:
DONE DOWN "[Xserve] No data for ${_IDLETIMEOUT} seconds. [Line ${_IDLELINE}]"

@UNEXPECTED_GREETING:
DONE DOWN "[Xserve] Unexpected greeting from port ${_REMOTEPORT}. (${_LINE:50})"

@UNAVAIL_GET_RESPONSE:
MTCH m"50[0-9]" else goto @BAD_GET_RESPONSE
DONE DOWN "[Xserve] ${_LINE:50} (${URL})"

@BAD_GET_RESPONSE:
MTCH "201" ELSE #+2
DONE WARN "[Xserve] 201 Created (${URL})"
MTCH "202" ELSE #+2
DONE WARN "[Xserve] 202 Accepted (${URL})"
MTCH "204" ELSE #+2
DONE WARN "[Xserve] 204 No Content (${URL})"
MTCH "301" ELSE #+2
DONE WARN "[Xserve] 301 Moved Permanently (${URL})"
MTCH "302" ELSE #+2
DONE WARN "[Xserve] 302 Moved Temporarily (${URL})"
MTCH "304" ELSE #+2
DONE WARN "[Xserve] 304 Not Modified (${URL})"
MTCH "400" ELSE #+2
DONE WARN "[Xserve] 400 Bad Request (${URL})"
MTCH "401" ELSE #+2
DONE WARN "[Xserve] 401 Unauthorized (${URL})"
MTCH "403" ELSE #+2
DONE WARN "[Xserve] 403 Forbidden (${URL})"
MTCH "404" ELSE #+2
DONE WARN "[Xserve] 404 Not Found (${URL})"
MTCH "500" ELSE #+2
DONE ALRM "[Xserve] 500 Internal Server Error (${URL})"
MTCH "501" ELSE #+2
DONE ALRM "[Xserve] 501 Not Implemented (${URL})"
MTCH "502" ELSE #+2
DONE ALRM "[Xserve] 502 Bad Gateway (${URL})"
MTCH "503" ELSE #+2
DONE ALRM "[Xserve] 503 Service Unavailable (${URL})"
DONE ALRM "[Xserve] Unknown Error Code ${_LINE:4} (${URL})"

@DISCONNECT:
DONE DOWN "[Xserve] Disconnected from port ${_REMOTEPORT} after ${_SECSCONNECTED} seconds."


#@FAIL_INIT:
#STOR "RET" "@FAILED"
#GOTO @INIT_VARS

@FAILED:
#use default error message in 4.2.1 and later
DONE DOWN

#subroutine to initialize the variables
@INIT_VARS:
#get the time delta:
EVAL $new_time := time()
CHCK "$time" #+2
EVAL $time_delta := $new_time - $time
STOR "time" "${new_time}"

#init lots of variables- initially, I was under the impression that variables were initialized as the empty string...
STOR "^interface0" "0"
STOR "^interface1" "1"
STOR "^interface2" "2"
STOR "^interface3" "3"
STOR "^network0" ""
STOR "^network0_overflow" ""
STOR "^network1" ""
STOR "^network1_overflow" ""
STOR "^network2" ""
STOR "^network2_overflow" ""
STOR "^network3" ""
STOR "^network3_overflow" ""

STOR "^drivebay_0" "1"
STOR "^drivebay_1" "2"
STOR "^drivebay_2" "3"
STOR "^drivebay_3" "4"
STOR "^drives0" ""
STOR "^drives0_overflow" ""
STOR "^drives1" ""
STOR "^drives1_overflow" ""
STOR "^drives2" ""
STOR "^drives2_overflow" ""
STOR "^drives3" ""
STOR "^drives3_overflow" ""

STOR "^TEMP_NAME" "Temperature"
STOR "^temperature" ""

STOR "^POWR_NAME" "Power Supply"
STOR "^power" ""

STOR "^blowers" ""

STOR "^security" ""
STOR "^lock_status" "Unknown"

STOR "^identity" ""
STOR "^identity_overflow" ""

STOR "ERROR_MESSAGE" ""
STOR "ERROR_LEVEL" "0"

#STOR "INTERFACES_SEEN" "-1"
#STOR "CONN_SUMMARY_LOOP_COUNT" "0"
#STOR "DRIVES_SEEN" "-1"
#STOR "DRIV_SUMMARY_LOOP_COUNT" "0"
#STOR "FAN_DETAIL_SEEN" "0"
#STOR "FAN_SUMMARY_LOOP_COUNT" "0"
GOTO ${RET}



#ignore the mail segment for now
@EMAIL:
NEXT
#find the matching </dict> tag at end of EMAIL value
EXPT "</dict>"i else goto @NO_MATCH
#parse the rest of the root <dict> element
NEXT
GOTO @ROOT_SWITCH

#use switch...case structures for all known status keys
#		(Connectivity,Drives,Enclosure,Fan,Identity,Power,Temperature)
@STATUS:
NEXT
@STATUS_1:
EXPT "<key>([^<]+)</key>"ir else goto @ROOT_SWITCH
SBNE "${1}" "Connectivity"i #+4
SBNE "${Network[Show,Ignore]}" "Ignore"i #+2
GOTO @IGNORE
GOTO @CONNECTIVITY
SBNE "${1}" "Drives"i ELSE #+4
SBNE "${Drives[Show,Ignore]}" "Ignore"i #+2
GOTO @IGNORE
GOTO @DRIVES
SBNE "${1}" "Enclosure"i ELSE #+4
SBNE "${Security[Show,Ignore]}" "Ignore"i #+2
GOTO @IGNORE
GOTO @ENCLOSURE
SBNE "${1}" "Fan"i ELSE #+4
SBNE "${Blowers[Show,Ignore]}" "Ignore"i #+2
GOTO @IGNORE
GOTO @FAN
SBNE "${1}" "Identity"i ELSE #+2
GOTO @IDENTITY
SBNE "${1}" "Power"i ELSE #+4
SBNE "${Power[Show,Ignore]}" "Ignore"i #+2
GOTO @IGNORE
GOTO @POWER
SBNE "${1}" "Temperature"i ELSE #+4
SBNE "${Temperature[Show,Ignore]}" "Ignore"i #+2
GOTO @IGNORE
GOTO @TEMPERATURE
SBNE "${1}" "Memory"i ELSE #+4
#SBNE "${Memory[Show,Ignore]}" "Ignore"i #+2
GOTO @IGNORE_ARRAY
GOTO @IGNORE_ARRAY

GOTO @IGNORE_ARRAY

#check ERROR_LEVEL
NBNE #${ERROR_LEVEL} #0 @DONE_ERROR
DONE OKAY

@DONE_ERROR:
NBNE #${ERROR_LEVEL} #1 #+3
STOR "ERROR_STR" "WARN"
GOTO @DONE_MSG
NBGT #${ERROR_LEVEL} #2 #+3
STOR "ERROR_STR" "ALRM"
GOTO @DONE_MSG
STOR "ERROR_STR" "DOWN"
#fallthrough

@DONE_MSG:
DONE ${ERROR_STR} "${ERROR_MESSAGE}"

@IGNORE:
NEXT
STOR "XML_STACK" "0"

@IGNORE_LOOP:
#find the next <dict> tag or the matching </dict> tag
EXPT "dict>"i else goto @STATUS
MTCH "</dict>"i ELSE #+2
#We add -2, then fall through to the ELSE and add 1, to have a net effect of adding -1
#	(It was easier than a bunch of GOTO statements and an extra label or two...)
NADD "XML_STACK" #-2

# else assume it's a <dict> tag
NADD "XML_STACK" #1

NEXT
NBGT #${XML_STACK} #0 @IGNORE_LOOP
GOTO @STATUS

@IGNORE_ARRAY:
NEXT
STOR "XML_STACK" "0"

@IGNORE_ARRAY_LOOP:
#find the next <array> tag or the matching </array> tag
EXPT "array>"i
MTCH "</array>"i ELSE #+2
#We add -2, then fall through to the ELSE and add 1, to have a net effect of adding -1
#	(It was easier than a bunch of GOTO statements and an extra label or two...)
NADD "XML_STACK" #-2

# else assume it's a <array> tag
NADD "XML_STACK" #1

NEXT
NBGT #${XML_STACK} #0 @IGNORE_ARRAY_LOOP
GOTO @STATUS

@IDENTITY:
NEXT
EXPT "<dict>"i else goto @STATUS
EXPT "<key>([^<]+)</key>"ir else goto @STATUS
SCAT "^identity_overflow" "\r  ²5³Identity²0P³"

#loop on every <key> in the <dict>
@INFO_DICT:
MTCH "</dict>"i ELSE #+5
SBNE "${Info[Show,Ignore]}" "Ignore"i #+3
STOR "^identity_overflow" ""
STOR "^identity" ""
GOTO @STATUS

MTCH "<key>([^<]+)</key>"ir else goto @STATUS
SBNE "${1}" "KeySwitch"i @SERVICE_ID
NEXT
MTCH "<([^<]+)/>"ir else goto @INFO_DICT
NEXT
SBNE "${2}" "true" #+3
STOR "^lock_status" "Locked"
GOTO @INFO_DICT
STOR "^lock_status" "Unlocked"
GOTO @INFO_DICT


@SERVICE_ID:
SBNE "${1}" "ServiceID"i @UPTIME
NEXT
MTCH "<([^<]+)/>"ir else goto @INFO_DICT
NEXT
GOTO @INFO_DICT


@UPTIME:
SBNE "${1}" "Uptime"i @INFO_DICT_LOOP
NEXT
MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @INFO_DICT
NEXT
STOR "_uptime" "${2}"
GOTO @INFO_DICT


@INFO_DICT_LOOP:
SCAT "^identity_overflow" "\r    ²4³${1}:²0³ " @INFO_OVERFLOW
NEXT
MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @INFO_DICT
@INFO_DICT_LOOP_1:
SCAT "^identity_overflow" "${2}" @INFO_OVERFLOW_1
NEXT
GOTO @INFO_DICT

#Deal with strings > 255 characters...
@INFO_OVERFLOW:
STOR "^identity" "${^identity_overflow}"
STOR "^identity_overflow" ""
GOTO @INFO_DICT_LOOP

@INFO_OVERFLOW_1:
STOR "^identity" "${^identity_overflow}"
STOR "^identity_overflow" ""
GOTO @INFO_DICT_LOOP_1

#Each Status key except Identity has three arrays- Detail, Info, Summary
#	Detail and Info are arrays of <dict> elements
#	Summary is an array of <integer> elements

@CONNECTIVITY:
NEXT
@CONNECTIVITY_1:
EXPT "<key>([^<]+)</key>"ir else goto @STATUS
SBNE "${1}" "Detail"i ELSE #+2
GOTO @CONN_DETAIL
SBNE "${1}" "Info"i ELSE #+2
GOTO @CONN_INFO
SBNE "${1}" "Summary"i ELSE #+2
GOTO @CONN_SUMMARY
GOTO @STATUS_1

@CONN_DETAIL:
STOR "INTERFACES_SEEN" "-1"
NEXT
@CONN_DETAIL_1:
EXPT "<dict>"i else goto @CONNECTIVITY
EXPT "<key>([^<]+)</key>"ir else goto @CONNECTIVITY
NADD "INTERFACES_SEEN" #1
SCAT "^network${INTERFACES_SEEN}_overflow" "\r  ²5³Interface $${^interface${INTERFACES_SEEN}}²0P³"

#loop on every <key> in the <dict>
@CONN_DETAIL_DICT:
MTCH "</dict>"i ELSE #+4
NEXT
MTCH "</array>"i ELSE @CONN_DETAIL_1
GOTO @CONNECTIVITY

MTCH "<key>([^<]+)</key>"ir else goto @CONNECTIVITY
@CONN_DETAIL_DICT_LOOP:
STOR "INTERFACE_VAR_NAME" "${1}"
MTCH "<key>(.+)([A-Z][a-z]+)</key>"r #+4
STOR "first_word" "${1}"
STOR "1" "${1} ${2}"
GOTO #+2
STOR "first_word" "${1}"
STOR "id" "${INTERFACE_VAR_NAME} ${INTERFACES_SEEN}"
SCAT "^network${INTERFACES_SEEN}_overflow" "\r    ²4³${1}:²0³ " @CONN_DETAIL_OVERFLOW
NEXT
MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @CONNECTIVITY_1
SBNE "${1}" "integer"i @CONN_DETAIL_DICT_LOOP_1
#convert to unsigned
EVAL $2 := sprintf( "%u", $2)
STOR "${id}" "${2}"
STOR "2" "$${${id}}"

@CONN_DETAIL_DICT_LOOP_1:
SCAT "^network${INTERFACES_SEEN}_overflow" "${2}" @CONN_DETAIL_OVERFLOW_1
NEXT

#If $first_word is 'Bytes' or 'Packets'
# then, calculate a delta.
SBNE "${first_word}" "Bytes"i #+2
GOTO @BYTES
SBNE "${first_word}" "Packets"i #+2
GOTO @PACKETS
GOTO @CONN_DETAIL_DICT

#Deal with strings > 255 characters...
@CONN_DETAIL_OVERFLOW:
STOR "^network${INTERFACES_SEEN}" "${^network${INTERFACES_SEEN}_overflow}"
STOR "^network${INTERFACES_SEEN}_overflow" ""
GOTO @CONN_DETAIL_DICT_LOOP

@CONN_DETAIL_OVERFLOW_1:
STOR "^network${INTERFACES_SEEN}" "${^network${INTERFACES_SEEN}_overflow}"
STOR "^network${INTERFACES_SEEN}_overflow" ""
GOTO @CONN_DETAIL_DICT_LOOP_1

#Bytes:
#first, convert Bytes to kbits:
#	strip the last three characters off (equivalent to / 1000)
@BYTES:
STOR "value" "${${id}}"
EVAL $value := substr( "${value}", 0, -3 )
#	if the string is now empty, it is 0
SBNE "" "${value}" #+3
STOR "value" "0"
GOTO #+2
#	multiply the result by 8
EVAL $value := $value * 8

@DELTA_CALCULATION:
CHCK "${last_${id}}" #+2
GOTO #+3
STOR "last_${id}" "${value}"
GOTO @CONN_DETAIL_DICT

#then, calculate rate:
#	subtract last value from this value (currentKBits - lastKBits)
STOR "last_value" "${last_${id}}"
EVAL $rate_delta := $value - $last_value
STOR "last_${id}" "${value}"

#If the rate is negative, then the counter has probably rolled over.
#  Skip this one and try again next poll.
NBNE #${rate_delta} #0 #+2		-- rate_delta != 0
GOTO #+3
NBGT #${rate_delta} #0 #+2		-- rate_delta > 0
GOTO @CONN_DETAIL_DICT

#if (time_delta <= 0), then return
NBGT #${time_delta} #0 #+2
GOTO @CONN_DETAIL_DICT

#	divide by the time delta ($time)
EVAL $value := round( $rate_delta / $time_delta )

#write the rate
STOR "${id} rate" "${value}"
@CONN_DETAIL_DICT_OVERFLOW_RET_2:
STOR "OVERFLOW_RET" "@CONN_DETAIL_DICT_OVERFLOW_RET_2"
SCAT "^network${INTERFACES_SEEN}_overflow" "  $${${id} rate} " @OVERFLOW

@CONN_DETAIL_DICT_OVERFLOW_RET_3:
STOR "OVERFLOW_RET" "@CONN_DETAIL_DICT_OVERFLOW_RET_3"
#write the units
#If $first_word is 'Bytes' or 'Packets'
# then, calculate a delta.
SBNE "${first_word}" "Bytes"i #+3
SCAT "^network${INTERFACES_SEEN}_overflow" "kbits/sec" @OVERFLOW
GOTO #+3
SBNE "${first_word}" "Packets"i #+2
SCAT "^network${INTERFACES_SEEN}_overflow" "packets/sec" @OVERFLOW

GOTO @CONN_DETAIL_DICT

#Packets:
#	subtract the last value from this value (currentPackets - lastPackets)
#	divide by the time delta ($time)
#This is done in DELTA_CALCULATION for us
@PACKETS:
STOR "value" "${${id}}"
GOTO @DELTA_CALCULATION

#things to verify:
#	Packets subtraction doesn't overflow
#	time delta calculation doesn't overflow
#	Some variables will not be initialized the first time the probe runs.
#	Deltas are not shown or calculated the first time the probe runs.

@CONN_INFO:
STOR "INTERFACES_SEEN" "-1"
NEXT
@CONN_INFO_1:
EXPT "<dict>"i else goto @CONNECTIVITY
EXPT "<key>([^<]+)</key>"ir else goto @CONNECTIVITY
NADD "INTERFACES_SEEN" #1

#loop on every <key> in the <dict>
@CONN_INFO_DICT:
MTCH "</dict>"i ELSE #+4
NEXT
MTCH "</array>"i ELSE @CONN_INFO_1
GOTO @CONNECTIVITY

MTCH "<key>([^<]+)</key>"ir else goto @CONNECTIVITY
SBNE "${1}" "Name"i @CONN_INFO_DICT_LOOP
NEXT
MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @CONNECTIVITY_1
STOR "^interface${INTERFACES_SEEN}" "${2}"
NEXT
GOTO @CONN_INFO_DICT

@CONN_INFO_DICT_LOOP:
MTCH "<key>(.+)([A-Z][a-z]+)</key>"r #+2
STOR "1" "${1} ${2}"
SCAT "^network${INTERFACES_SEEN}_overflow" "\r    ²4³${1}:²0³ " @CONN_INFO_OVERFLOW
NEXT
MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @CONNECTIVITY_1
@CONN_INFO_DICT_LOOP_1:
SCAT "^network${INTERFACES_SEEN}_overflow" "${2}" @CONN_INFO_OVERFLOW_1
NEXT
GOTO @CONN_INFO_DICT

#Deal with strings > 255 characters...
@CONN_INFO_OVERFLOW:
STOR "^network${INTERFACES_SEEN}" "${^network${INTERFACES_SEEN}_overflow}"
STOR "^network${INTERFACES_SEEN}_overflow" ""
GOTO @CONN_INFO_DICT_LOOP

@CONN_INFO_OVERFLOW_1:
STOR "^network${INTERFACES_SEEN}" "${^network${INTERFACES_SEEN}_overflow}"
STOR "^network${INTERFACES_SEEN}_overflow" ""
GOTO @CONN_INFO_DICT_LOOP_1

@CONN_SUMMARY:
EXPT "<array>"i else goto @CONNECTIVITY
STOR "CONN_SUMMARY_LOOP_COUNT" "0"
@CONN_SUMMARY_LOOP:
NEXT
MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @CONNECTIVITY
NBNE #${2} #0 @CONN_ERROR
NADD "CONN_SUMMARY_LOOP_COUNT" #1
GOTO @CONN_SUMMARY_LOOP

@CONN_ERROR:
NBGT #${ERROR_LEVEL} #${2} #+2
STOR "ERROR_LEVEL" "${2}"
SCAT "ERROR_MESSAGE" "An error was detected on Interface ${CONN_SUMMARY_LOOP_COUNT}\r"
GOTO @CONNECTIVITY

@DRIVES:
NEXT
@DRIVES_1:
EXPT "<key>([^<]+)</key>"ir else goto @STATUS
SBNE "${1}" "Detail"i ELSE #+2
GOTO @DRIV_DETAIL
SBNE "${1}" "Info"i ELSE #+2
GOTO @DRIV_INFO
SBNE "${1}" "Summary"i ELSE #+2
GOTO @DRIV_SUMMARY
GOTO @STATUS_1

@DRIV_DETAIL:
NEXT
STOR "DRIVES_SEEN" "-1"
@DRIV_DETAIL_1:
EXPT "<dict>"i else goto @DRIVES
EXPT "<key>([^<]+)</key>"ir else goto @DRIVES
NADD "DRIVES_SEEN" #1
SCAT "^drives${DRIVES_SEEN}_overflow" "\r  ²5³Drive $${^drivebay_${DRIVES_SEEN}}²0P³"

#loop on every <key> in the <dict>
@DRIV_DETAIL_DICT:
MTCH "</dict>"i ELSE #+4
NEXT
MTCH "</array>"i ELSE @DRIV_DETAIL_1
GOTO @DRIVES

MTCH "<key>([^<]+)</key>"ir else goto @DRIVES
@DRIV_DETAIL_DICT_LOOP:
STOR "DRIVE_VAR_NAME" "${1}"
MTCH "<key>(.+)([A-Z][a-z]+)</key>"r #+2
STOR "1" "${1} ${2}"
SCAT "^drives${DRIVES_SEEN}_overflow" "\r    ²4³${1}:²0³ " @DRIV_DETAIL_OVERFLOW
NEXT
MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @DRIVES_1
@DRIV_DETAIL_DICT_LOOP_1:
SCAT "^drives${DRIVES_SEEN}_overflow" "$${${DRIVE_VAR_NAME} ${DRIVES_SEEN}}" @DRIV_DETAIL_OVERFLOW_1
STOR "${DRIVE_VAR_NAME} ${DRIVES_SEEN}" "${2}"
NEXT
GOTO @DRIV_DETAIL_DICT

#Deal with strings > 255 characters...
@DRIV_DETAIL_OVERFLOW:
STOR "^drives${DRIVES_SEEN}" "${^drives${DRIVES_SEEN}_overflow}"
STOR "^drives${DRIVES_SEEN}_overflow" ""
GOTO @DRIV_DETAIL_DICT_LOOP

@DRIV_DETAIL_OVERFLOW_1:
STOR "^drives${DRIVES_SEEN}" "${^drives${DRIVES_SEEN}_overflow}"
STOR "^drives${DRIVES_SEEN}_overflow" ""
GOTO @DRIV_DETAIL_DICT_LOOP_1

@DRIV_INFO:
NEXT
STOR "DRIVES_SEEN" "-1"
@DRIV_INFO_1:
EXPT "<dict>"i else goto @DRIVES
EXPT "<key>([^<]+)</key>"ir else goto @DRIVES
NADD "DRIVES_SEEN" #1

#loop on every <key> in the <dict>
@DRIV_INFO_DICT:
MTCH "</dict>"i ELSE #+4
NEXT
MTCH "</array>"i ELSE @DRIV_INFO_1
GOTO @DRIVES

MTCH "<key>([^<]+)</key>"ir else goto @DRIVES
SBNE "${1}" "Location"i @DRIV_INFO_DICT_LOOP
NEXT
MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @DRIVES_1
STOR "^drivebay_${DRIVES_SEEN}" "${2}"
NEXT
GOTO @DRIV_INFO_DICT

@DRIV_INFO_DICT_LOOP:
SCAT "^drives${DRIVES_SEEN}_overflow" "\r    ²4³${1}:²0³ " @DRIV_INFO_OVERFLOW
NEXT
MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @DRIVES_1
@DRIV_INFO_DICT_LOOP_1:
SCAT "^drives${DRIVES_SEEN}_overflow" "${2}" @DRIV_INFO_OVERFLOW_1
NEXT
GOTO @DRIV_INFO_DICT

#Deal with strings > 255 characters...
@DRIV_INFO_OVERFLOW:
STOR "^drives${DRIVES_SEEN}" "${^drives${DRIVES_SEEN}_overflow}"
STOR "^drives${DRIVES_SEEN}_overflow" ""
GOTO @DRIV_INFO_DICT_LOOP

@DRIV_INFO_OVERFLOW_1:
STOR "^drives${DRIVES_SEEN}" "${^drives${DRIVES_SEEN}_overflow}"
STOR "^drives${DRIVES_SEEN}_overflow" ""
GOTO @DRIV_INFO_DICT_LOOP_1

@DRIV_SUMMARY:
EXPT "<array>"i else goto @DRIVES
STOR "DRIV_SUMMARY_LOOP_COUNT" "0"
@DRIV_SUMMARY_LOOP:
NEXT
MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @DRIVES_1
NBNE #${2} #0 @DRIV_ERROR
NADD "DRIV_SUMMARY_LOOP_COUNT" #1
GOTO @DRIV_SUMMARY_LOOP:

@DRIV_ERROR:
NBGT #${ERROR_LEVEL} #${2} #+2
STOR "ERROR_LEVEL" "${2}"
SCAT "ERROR_MESSAGE" "An error was detected on Drive ${DRIV_SUMMARY_LOOP_COUNT}\r"
GOTO @DRIVES

@ENCLOSURE:
NEXT
@ENCLOSURE_1:
EXPT "<key>([^<]+)</key>"ir else goto @STATUS
SBNE "${1}" "Detail"i ELSE #+2
GOTO @ENCL_DETAIL
SBNE "${1}" "Info"i ELSE #+2
GOTO @ENCL_INFO
SBNE "${1}" "Summary"i ELSE #+2
GOTO @ENCL_SUMMARY
GOTO @STATUS_1

#ignore for now
@ENCL_DETAIL:
@ENCL_INFO:
NEXT
EXPT "</array>"i else goto #+1
GOTO @ENCLOSURE

@ENCL_SUMMARY:
EXPT "<array>"i else goto @ENCLOSURE
@ENCL_SUMMARY_LOOP:
NEXT
MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @ENCLOSURE_1
SCAT "^security" "\r  ²5³Security²0P³"
SCAT "^security" "\r    ²4³Security Lock:²0P³ $${^lock_status}"
NBNE #${2} #0 @ENCL_ERROR
SCAT "^security" "\r    No enclosure intrusion detected."
GOTO @ENCL_SUMMARY_LOOP

@ENCL_ERROR:
SCAT "^security" "\r    ²1³Enclosure intrusion detected.²0³"
NBGT #${ERROR_LEVEL} #${2} #+2
STOR "ERROR_LEVEL" "${2}"
SCAT "ERROR_MESSAGE" "An enclosure intrusion was detected.\r"
GOTO @ENCLOSURE

@FAN:
NEXT
@FAN_1:
EXPT "<key>([^<]+)</key>"ir else goto @STATUS
SBNE "${1}" "Detail"i ELSE #+2
GOTO @FAN_DETAIL
SBNE "${1}" "Info"i ELSE #+2
GOTO @FAN_INFO
SBNE "${1}" "Summary"i ELSE #+2
GOTO @FAN_SUMMARY
GOTO @STATUS_1

@FAN_DETAIL:
STOR "FAN_DETAIL_SEEN" "-1"
NEXT
@FAN_DETAIL_1:
EXPT "<dict>"i else goto @FAN
EXPT "<key>([^<]+)</key>"ir else goto @FAN
NADD "FAN_DETAIL_SEEN" #1
SCAT "^blowers" "\r  ²5³Fan ${FAN_DETAIL_SEEN}²0P³"

#loop on every <key> in the <dict>
@FAN_DETAIL_DICT:
MTCH "</dict>"i ELSE #+4
NEXT
MTCH "</array>"i ELSE @FAN_DETAIL_1
GOTO @FAN

MTCH "<key>([^<]+)</key>"ir else goto @FAN
SCAT "^blowers" "\r    ²4³${1}:²0³ "
NEXT
MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @FAN_1
STOR "Fan ${FAN_DETAIL_SEEN} speed" "${2}"
SCAT "^blowers" "$${Fan ${FAN_DETAIL_SEEN} speed}"
NEXT
GOTO @FAN_DETAIL_DICT

#ignore for now
@FAN_INFO:
NEXT
EXPT "</array>"i else goto #+1
GOTO @FAN

@FAN_SUMMARY:
EXPT "<array>"i else goto @FAN
STOR "FAN_SUMMARY_LOOP_COUNT" "0"
@FAN_SUMMARY_LOOP:
NEXT
MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @FAN_1
NBNE #${2} #0 @FAN_WARN
NADD "FAN_SUMMARY_LOOP_COUNT" #1
GOTO @FAN_SUMMARY_LOOP

@FAN_WARN:
NBGT #${ERROR_LEVEL} #${2} #+2
STOR "ERROR_LEVEL" "${2}"
NBNE #${2} #1 @FAN_ERROR
SCAT "ERROR_MESSAGE" "Fan ${FAN_SUMMARY_LOOP_COUNT} is slow.\r"
GOTO @FAN

@FAN_ERROR:
SCAT "ERROR_MESSAGE" "A failure was detected on Fan ${FAN_SUMMARY_LOOP_COUNT}\r"
GOTO @FAN

@TEMPERATURE:
NEXT
@TEMPERATURE_1:
EXPT "<key>([^<]+)</key>"ir else goto @STATUS
SBNE "${1}" "Detail"i ELSE #+2
GOTO @TEMP_DETAIL
SBNE "${1}" "Info"i ELSE #+2
GOTO @TEMP_INFO
SBNE "${1}" "Summary"i ELSE #+2
GOTO @TEMP_SUMMARY

GOTO @STATUS_1

@TEMP_DETAIL:
SCAT "^temperature" "\r  ²5³Temperature:²0P³"
STOR "TEMP_DETAIL_SEEN" "-1"
NEXT
@TEMP_DETAIL_1:
EXPT "<dict>"i else goto @TEMPERATURE
EXPT "<key>([^<]+)</key>"ir else goto @TEMPERATURE
NADD "TEMP_DETAIL_SEEN" #1

#loop on every <key> in the <dict>
@TEMP_DETAIL_DICT:
MTCH "</dict>"i ELSE #+4
NEXT
MTCH "</array>"i ELSE @TEMP_DETAIL_1
GOTO @TEMPERATURE

MTCH "<key>Temperature</key>"ir else goto @TEMPERATURE
NEXT
MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @TEMPERATURE_1
STOR "TEMPERATURE ${TEMP_DETAIL_SEEN}" "${2}"
NEXT
GOTO @TEMP_DETAIL_DICT

#Get the human presentable name...
@TEMP_INFO:
STOR "TEMP_INFO_SEEN" "-1"
NEXT
@TEMP_INFO_1
EXPT "<dict>"i else goto @TEMPERATURE
EXPT "<key>([^<]+)</key>"ir else goto @TEMPERATURE
NADD "TEMP_INFO_SEEN" #1

#loop on every <key> in the <dict> until we find the "Name" key
@TEMP_INFO_DICT:
MTCH "</dict>"i ELSE #+4
NEXT
MTCH "</array>"i ELSE @TEMP_INFO_1
GOTO @TEMPERATURE

MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @TEMPERATURE_1
NEXT
SBNE "${1}" "key"i @TEMP_INFO_DICT
SBNE "${2}" "Name"i @TEMP_INFO_DICT
MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @TEMPERATURE_1
STOR "^TEMP_NAME ${TEMP_INFO_SEEN}" "${2}"
SCAT "^temperature" "\r    ²4³$${^TEMP_NAME ${TEMP_INFO_SEEN}}²0³ "
STOR "${^TEMP_NAME ${TEMP_INFO_SEEN}} C" "${TEMPERATURE ${TEMP_INFO_SEEN}}"
SCAT "^temperature" "$${${^TEMP_NAME ${TEMP_INFO_SEEN}} C}°C"
#convert to Fahrenheit
STOR "x" "${TEMPERATURE ${TEMP_INFO_SEEN}}"
EVAL ${x} := sprintf( "%d", 1.8 * ${x} + 32 )
STOR "${^TEMP_NAME ${TEMP_INFO_SEEN}} F" "${x}"
SCAT "^temperature" " ($${${^TEMP_NAME ${TEMP_INFO_SEEN}} F}°F)"
NEXT
GOTO @TEMP_INFO_DICT

@TEMP_SUMMARY:
EXPT "<array>"i else goto @TEMPERATURE
@TEMP_SUMMARY_LOOP:
NEXT
MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @TEMPERATURE_1
NBNE #${2} #0 @TEMP_ERROR
GOTO @TEMP_SUMMARY_LOOP

@TEMP_ERROR:
NBGT #${ERROR_LEVEL} #${2} #+2
STOR "ERROR_LEVEL" "${2}"
SCAT "ERROR_MESSAGE" "$${^TEMP_NAME ${TEMP_INFO_SEEN}} is "
NBNE #${2} #1 #+3
SCAT "ERROR_MESSAGE" "warm!\r"
GOTO @TEMPERATURE
SCAT "ERROR_MESSAGE" "high!\r"
GOTO @TEMPERATURE

#	For Power, we store the voltages in VOLT_#, where # is the index of the array that they are in.  The labels for the voltages are in RAIL_#.
#^POWR_NAME contains the Name tag of the Info dict (the name of the power supply).

@POWER:
NEXT
@POWER_1:
EXPT "<key>([^<]+)</key>"ir else goto @STATUS
SBNE "${1}" "Detail"i ELSE #+2
GOTO @POWR_DETAIL
SBNE "${1}" "Info"i ELSE #+2
GOTO @POWR_INFO
SBNE "${1}" "Summary"i ELSE #+2
GOTO @POWR_SUMMARY

SCAT "^power" "\r  ²5³${^POWR_NAME}²0P³"
STOR "LOOP_COUNT" "0"
NADD "RAILS_SEEN" #-1
@PWR_LOOP
NBGT #${LOOP_COUNT} #${RAILS_SEEN} @STATUS_1
#Because we don't want the variable names to be VOLT_# in the chart data windows, we use the value of the RAIL_# variable as the variable name
STOR "${RAIL_${LOOP_COUNT}}" "${_FLOAT:${VOLT_${LOOP_COUNT}}}"
SCAT "^power" "\r    ²4³${RAIL_${LOOP_COUNT}}:²0³ $${${RAIL_${LOOP_COUNT}}}"
NADD "LOOP_COUNT" #1
GOTO @PWR_LOOP

@POWR_DETAIL:
NEXT
EXPT "<dict>"i else goto @POWER
EXPT "<key>([^<]+)</key>"ir else goto @POWER
NEXT
MTCH "<array>"i else goto @POWER_1
STOR "VOLTS_SEEN" "0"
#Fall through to POWR_DETAIL_DICT

#only expect Voltages key in this dict, but we loop on the array...
@POWR_DETAIL_DICT:
NEXT
MTCH "</array>"i else goto #+2
GOTO @POWER
MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @POWER_1
STOR "VOLT_${VOLTS_SEEN}" "${2}"
NADD "VOLTS_SEEN" #1
GOTO @POWR_DETAIL_DICT

#Get the power supply name, and the "Rails"
@POWR_INFO:
NEXT
@POWR_INFO_1:
EXPT "<dict>"i else goto @POWER
EXPT "<key>([^<]+)</key>"ir else goto @POWER

#loop on every <key> in the <dict> until we find the "Name" and "Rails" keys
@POWR_INFO_DICT:
MTCH "</dict>"i ELSE #+4
NEXT
MTCH "</array>"i ELSE @POWR_INFO_1
GOTO @POWER

MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @POWER_1
NEXT
SBNE "${1}" "key"i @POWR_INFO_DICT
SBNE "${2}" "Name"i #+3
MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @POWER_1
STOR "^POWR_NAME" "${2}"
SBNE "${2}" "Rails"i @POWR_INFO_DICT
NEXT
MTCH "<array>"i else goto @POWR_INFO_DICT
STOR "RAILS_SEEN" "0"
#Fall through to POWR_ARRAY

#only expect Voltages key in this dict, but we loop on the array...
@POWR_ARRAY:
NEXT
MTCH "</array>"i else goto #+3
NEXT
GOTO @POWR_INFO_DICT
MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @POWR_INFO_DICT
STOR "RAIL_${RAILS_SEEN}" "${2}"
NADD "RAILS_SEEN" #1
GOTO @POWR_ARRAY

@POWR_SUMMARY:
EXPT "<array>"i else goto @POWER
@POWR_SUMMARY_LOOP:
NEXT
MTCH "<([a-z]+)>([^<]+)</([a-z]+)>"ir else goto @POWER_1
NBNE #${2} #0 @POWR_ERROR
GOTO @POWR_SUMMARY_LOOP

@POWR_ERROR:
NBGT #${ERROR_LEVEL} #${2} #+2
STOR "ERROR_LEVEL" "${2}"
NBNE #${2} #1 #+3
SCAT "ERROR_MESSAGE" "A warning was detected on ${^POWR_NAME}.\r"
GOTO @POWER
SCAT "ERROR_MESSAGE" "An error was detected on ${^POWR_NAME}.\r"
GOTO @POWER

</script>

<script-output>

\B5\Xserve Information\0P\${^identity}${^identity_overflow}${^drives0}${^drives0_overflow}${^drives1}${^drives1_overflow}${^drives2}${^drives2_overflow}${^drives3}${^drives3_overflow}${^power}${^network0}${^network0_overflow}${^network1}${^network1_overflow}${^network2}${^network2_overflow}${^network3}${^network3_overflow}${^temperature}${^blowers}${^security}

</script-output>


<!--
Sample plist (from Steven Kolins via RT 54354):
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN"
"http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Email</key>
	<dict>
		<key>Body</key>
		<string>A problem has been detected on this server.</string>
		<key>Enabled</key>
		<array>
			<string>Drives</string>
			<string>Power</string>
			<string>Temperature</string>
			<string>Fans</string>
		</array>
		<key>From</key>
		<string>steven_kolins@abss.k12.nc.us</string>
		<key>Mode</key>
		<integer>1</integer>
		<key>Subject</key>
		<string>BJE Problem Notification</string>
		<key>To</key>
		<array>
			<string></string>
		</array>
		<key>Type</key>
		<array>
			<integer>0</integer>
		</array>
		<key>X-Priority</key>
		<string>3</string>
	</dict>
	<key>Status</key>
	<dict>
		<key>Connectivity</key>
		<dict>
			<key>Detail</key>
			<array>
				<dict>
					<key>BytesIn</key>
					<integer>1789105904</integer>
					<key>BytesOut</key>
					<integer>-1079231411</integer>
					<key>DuplexMode</key>
					<string>full-duplex</string>
					<key>IPAddress</key>
					<string>10.46.1.251</string>
					<key>Link</key>
					<string>active</string>
					<key>Mbps</key>
					<string>100baseTX</string>
					<key>PacketsIn</key>
					<integer>10351687</integer>
					<key>PacketsOut</key>
					<integer>14738164</integer>
					<key>SubNetMask</key>
					<string>255.255.0.0</string>
				</dict>
			</array>
			<key>Info</key>
			<array>
				<dict>
					<key>HWAddress</key>
					<string>00:0d:93:50:24:d2</string>
					<key>Kind</key>
					<string>Ethernet</string>
					<key>Name</key>
					<string>en0</string>
					<key>UserDefinedName</key>
					<string>Built-in Ethernet</string>
				</dict>
			</array>
			<key>Summary</key>
			<array>
				<integer>0</integer>
			</array>
		</dict>
		<key>Drives</key>
		<dict>
			<key>Detail</key>
			<array>
				<dict>
					<key>BytesRead</key>
					<integer>2417712640</integer>
					<key>BytesWritten</key>
					<integer>12749416960</integer>
					<key>ReadErrors</key>
					<integer>0</integer>
					<key>SMARTMessage</key>
					<string>No Warnings</string>
					<key>WriteErrors</key>
					<integer>0</integer>
				</dict>
				<dict>
					<key>BytesRead</key>
					<integer>588751872</integer>
					<key>BytesWritten</key>
					<integer>669748736</integer>
					<key>ReadErrors</key>
					<integer>0</integer>
					<key>SMARTMessage</key>
					<string>No Warnings</string>
					<key>WriteErrors</key>
					<integer>0</integer>
				</dict>
				<dict>
					<key>BytesRead</key>
					<integer>36286464</integer>
					<key>BytesWritten</key>
					<integer>594463744</integer>
					<key>ReadErrors</key>
					<integer>0</integer>
					<key>SMARTMessage</key>
					<string>No Warnings</string>
					<key>WriteErrors</key>
					<integer>0</integer>
				</dict>
				<dict>
					<key>BytesRead</key>
					<integer>8829665280</integer>
					<key>BytesWritten</key>
					<integer>1185280</integer>
					<key>ReadErrors</key>
					<integer>0</integer>
					<key>SMARTMessage</key>
					<string>No Warnings</string>
					<key>WriteErrors</key>
					<integer>0</integer>
				</dict>
			</array>
			<key>Info</key>
			<array>
				<dict>
					<key>Capacity</key>
					<integer>57241</integer>
					<key>Interconnect</key>
					<string>ATA</string>
					<key>Kind</key>
					<string>disk0</string>
					<key>Location</key>
					<string>Internal (Bay 1)</string>
					<key>Manufacturer</key>
					<string>ST</string>
					<key>Model</key>
					<string>ST360014A                               </string>
				</dict>
				<dict>
					<key>Capacity</key>
					<integer>57241</integer>
					<key>Interconnect</key>
					<string>ATA</string>
					<key>Kind</key>
					<string>disk2</string>
					<key>Location</key>
					<string>Internal (Bay 2)</string>
					<key>Manufacturer</key>
					<string>ST</string>
					<key>Model</key>
					<string>ST360014A                               </string>
				</dict>
				<dict>
					<key>Capacity</key>
					<integer>57241</integer>
					<key>Interconnect</key>
					<string>ATA</string>
					<key>Kind</key>
					<string>disk1</string>
					<key>Location</key>
					<string>Internal (Bay 3)</string>
					<key>Manufacturer</key>
					<string>ST</string>
					<key>Model</key>
					<string>ST360014A                               </string>
				</dict>
				<dict>
					<key>Capacity</key>
					<integer>57241</integer>
					<key>Interconnect</key>
					<string>ATA</string>
					<key>Kind</key>
					<string>disk3</string>
					<key>Location</key>
					<string>Internal (Bay 4)</string>
					<key>Manufacturer</key>
					<string>ST</string>
					<key>Model</key>
					<string>ST360014A                               </string>
				</dict>
			</array>
			<key>Summary</key>
			<array>
				<integer>0</integer>
				<integer>0</integer>
				<integer>0</integer>
				<integer>0</integer>
			</array>
		</dict>
		<key>Enclosure</key>
		<dict>
			<key>Detail</key>
			<array>
				<dict>
					<key>Enabled</key>
					<integer>0</integer>
				</dict>
			</array>
			<key>Info</key>
			<array>
				<dict>
					<key>Name</key>
					<string>Enclosure Intrusion</string>
				</dict>
			</array>
			<key>Summary</key>
			<array>
				<integer>0</integer>
			</array>
		</dict>
		<key>Fan</key>
		<dict>
			<key>Detail</key>
			<array>
				<dict>
					<key>Speed</key>
					<integer>4591</integer>
				</dict>
				<dict>
					<key>Speed</key>
					<integer>3552</integer>
				</dict>
			</array>
			<key>Info</key>
			<array>
				<dict>
					<key>Failure</key>
					<integer>661</integer>
					<key>Name</key>
					<string>Processor Module</string>
					<key>Warning</key>
					<integer>1000</integer>
				</dict>
				<dict>
					<key>Failure</key>
					<integer>661</integer>
					<key>Name</key>
					<string>PCI Slots</string>
					<key>Warning</key>
					<integer>1000</integer>
				</dict>
			</array>
			<key>Summary</key>
			<array>
				<integer>0</integer>
				<integer>0</integer>
			</array>
		</dict>
		<key>Identity</key>
		<dict>
			<key>BootROM</key>
			<string>$0004.65f3</string>
			<key>CPUs</key>
			<integer>2</integer>
			<key>KeySwitch</key>
			<false/>
			<key>L2Cache</key>
			<integer>256</integer>
			<key>MHz</key>
			<integer>1333</integer>
			<key>Model</key>
			<string>RackMac1,2</string>
			<key>Name</key>
			<string>bjeosx</string>
			<key>OS</key>
			<string>Mac OS X Server</string>
			<key>OSBuild</key>
			<string>7W98</string>
			<key>RAM</key>
			<integer>2048</integer>
			<key>Serial</key>
			<string>QP413085NP2</string>
			<key>Uptime</key>
			<integer>1647247</integer>
			<key>Version</key>
			<string>10.3.9</string>
		</dict>
		<key>Memory</key>
		<array>
			<dict>
				<key>ConfigurationType</key>
				<integer>0</integer>
				<key>Size</key>
				<integer>512</integer>
				<key>Slot</key>
				<string>DIMM0/J21</string>
				<key>Speed</key>
				<string>PC2700U-25330</string>
				<key>Type</key>
				<string>DDR SDRAM</string>
			</dict>
			<dict>
				<key>ConfigurationType</key>
				<integer>0</integer>
				<key>Size</key>
				<integer>512</integer>
				<key>Slot</key>
				<string>DIMM1/J22</string>
				<key>Speed</key>
				<string>PC2700U-25330</string>
				<key>Type</key>
				<string>DDR SDRAM</string>
			</dict>
			<dict>
				<key>ConfigurationType</key>
				<integer>0</integer>
				<key>Size</key>
				<integer>512</integer>
				<key>Slot</key>
				<string>DIMM2/J23</string>
				<key>Speed</key>
				<string>PC2700U-25330</string>
				<key>Type</key>
				<string>DDR SDRAM</string>
			</dict>
			<dict>
				<key>ConfigurationType</key>
				<integer>0</integer>
				<key>Size</key>
				<integer>512</integer>
				<key>Slot</key>
				<string>DIMM3/J20</string>
				<key>Speed</key>
				<string>PC2700U-25330</string>
				<key>Type</key>
				<string>DDR SDRAM</string>
			</dict>
		</array>
		<key>Power</key>
		<dict>
			<key>Detail</key>
			<array>
				<dict>
					<key>Voltages</key>
					<array>
						<real>11.75</real>
						<real>5.070000171661377</real>
						<real>3.3196001052856445</real>
						<real>2.4960000514984131</real>
						<real>1.6920000314712524</real>
						<real>1.5792000293731689</real>
					</array>
				</dict>
			</array>
			<key>Info</key>
			<array>
				<dict>
					<key>Name</key>
					<string>Main Power Supply</string>
					<key>Rails</key>
					<array>
						<string>12v supply</string>
						<string>5v supply</string>
						<string>3.3v supply</string>
						<string>2.5v supply</string>
						<string>Logic core</string>
						<string>Processor core</string>
					</array>
					<key>Tolerances</key>
					<array>
						<array>
							<real>10.800000190734863</real>
							<real>11.399999618530273</real>
							<real>12</real>
							<real>12.600000381469727</real>
							<real>13.199999809265137</real>
						</array>
						<array>
							<real>4.5</real>
							<real>4.75</real>
							<real>5</real>
							<real>5.25</real>
							<real>5.5</real>
						</array>
						<array>
							<real>3.1019999980926514</real>
							<real>3.2009999752044678</real>
							<real>3.2999999523162842</real>
							<real>3.3989999294281006</real>
							<real>3.497999906539917</real>
						</array>
						<array>
							<real>2.3499999046325684</real>
							<real>2.4249999523162842</real>
							<real>2.5</real>
							<real>2.5750000476837158</real>
							<real>2.6500000953674316</real>
						</array>
						<array>
							<real>1.5980000495910645</real>
							<real>1.6490000486373901</real>
							<real>1.7000000476837158</real>
							<real>1.7510000467300415</real>
							<real>1.8020000457763672</real>
						</array>
						<array>
							<real>1.485200047492981</real>
							<real>1.5326000452041626</real>
							<real>1.5800000429153442</real>
							<real>1.6274000406265259</real>
							<real>1.6748000383377075</real>
						</array>
					</array>
				</dict>
			</array>
			<key>Summary</key>
			<array>
				<integer>0</integer>
			</array>
		</dict>
		<key>Temperature</key>
		<dict>
			<key>Detail</key>
			<array>
				<dict>
					<key>Temperature</key>
					<integer>49</integer>
				</dict>
				<dict>
					<key>Temperature</key>
					<integer>55</integer>
				</dict>
			</array>
			<key>Info</key>
			<array>
				<dict>
					<key>High</key>
					<integer>65</integer>
					<key>Name</key>
					<string>Internal Ambient</string>
					<key>Warning</key>
					<integer>55</integer>
				</dict>
				<dict>
					<key>High</key>
					<integer>85</integer>
					<key>Name</key>
					<string>Processor Module</string>
					<key>Warning</key>
					<integer>80</integer>
				</dict>
			</array>
			<key>Summary</key>
			<array>
				<integer>0</integer>
				<integer>0</integer>
			</array>
		</dict>
	</dict>
	<key>command</key>
	<string>status</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
-->
