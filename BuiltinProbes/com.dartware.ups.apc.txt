<!--
    APC UPS (com.dartware.ups.apc)
    Custom Probe for InterMapper (http://www.intermapper.com)
    Please feel free to use this as a base for further development.
    Part of the UPS Probe Bundle -- Current Version: 2.4 / 31 August 2005.
    Bugs or Requests? Please contact us: upsbundle@intermapper.com.

    Revisions: (Probe Version reflects version of UPS Probe Bundle)
    Created -- 19 July 2005 by jkj.
    Updated for "display_name" change (IM 4.4) - 31 August 2005 by jkj.
    Version Changes:
        [v2.51] display update - 14 October 2005 by jkj.
		[v2.52] fix input volts display so that it displays input volts (not output) - 7 April 2006 by csw
		[v2.6 ] add autorecord section for use with InterMapper 5.0 - 5 May 2008
		[v2.8 ] Fixed warning "Bad variable: $batTimeOn" - 2 Mar 2009 by spr.
		[v3.1 ] Added parseable units for Reports - 4 Mar 2011 by jpd
-->

<header>
    "type"          =  "custom-snmp"
    "package"       =  "com.dartware"
    "probe_name"    =  "ups.apc"
    "human_name"    =  "APC UPS"
    "version"       =  "3.4"
    "address_type"  =  "IP, AT"
    "port_number"   =  "161"
    "display_name"  =  "Network Devices/UPS/APC UPS"
</header>

<description>
\g0i++\For APC UPS devices.\p--\
\b++\A. Probed MIB(s)\p--\
\i\This probe works best with devices which have implemented the listed MIB(s).\p\
(1 of 1) \b\APC UPS MIB\p\ [... enterprises.apc.products.hardware.ups / ... 1.3.6.1.4.1.318.1.1.1]

\b++\B. Displayed Values\p--\
UPS: model, firmware, status, (\i\battery\p\: capacity, time remaining, temperature, replacement status), (\i\output\p\: load percent, volts, amps, frequency), (\i\input\p\: volts, voltage range over last minute, frequency, last input failure).

\b++\C. Alarms\p--\
(1 of 3) If unit goes onto battery or goes off-line.
(2 of 3) If battery needs replacement.
(3 of 3) If the battery temperature exceeds user-specified thresholds (see "Parameters" below).

\b++\D. Warnings\p--\
(1 of 2) If unit goes onto "Smart Trim" or "Smart Boost"
(2 of 2) If the battery temperature exceeds user-specified thresholds (see "Parameters" below).

\b++\E. Parameters\p--\
(1 of 5) \i\Units of Temperature (C / F)\p\: Determines how the following thresholds are interpreted.
(2 of 5) \i\Alarm Threshold - Low Temp\p\: Threshold for alarm state (see above).
(3 of 5) \i\Warning Threshold - Low Temp\p\: Threshold for alarm state (see above).
(4 of 5) \i\Warning Threshold - High Temp\p\: Threshold for warning state (see above).
(5 of 5) \i\Alarm Threshold - High Temp\p\: Threshold for warning state (see above).

\bG3\Bugs or Requests? \p\\iU=mailto:upsbundle@intermapper.com\Please contact us.\p\
</description>

<parameters>
    "Units of Temperature (C / F)"  =  "C"
    "Alarm Threshold - Low Temp"     =  "0"
    "Warning Threshold - Low Temp"   =  "10"
    "Warning Threshold - High Temp"  =  "38"
    "Alarm Threshold - High Temp"    =  "40"
</parameters>

<snmp-device-properties>
    "apcups"       =  "false"
</snmp-device-properties>

<snmp-device-variables>
model,       1.3.6.1.4.1.318.1.1.1.1.1.1.0,  DEFAULT, "" <!-- upsBasicIdentModel -->
firmware,    1.3.6.1.4.1.318.1.1.1.1.2.1.0,  DEFAULT, "" <!-- upsAdvIdentFirmwareRevision -->

<!-- battery status -->
secs,           1.3.6.1.4.1.318.1.1.1.2.1.2.0,  DEFAULT,      "" <!-- upsBasicBatteryTimeOnBattery -->
batTimeOn,      ($outCode = 3)?", UPS has been on battery for $secs seconds.":"", CALCULATION
batTempC,       1.3.6.1.4.1.318.1.1.1.2.2.2.0,  DEFAULT,      "Battery Temperature (째C)" <!-- upsAdvBatteryTemperature -->
batTempF,       $batTempC*9/5+32, CALCULATION, "Battery Temperature (째F)" 
leftCharge,     1.3.6.1.4.1.318.1.1.1.2.2.1.0,  DEFAULT,      "Battery Capacity (%)" <!-- upsAdvBatteryCapacity -->
batMin,         1.3.6.1.4.1.318.1.1.1.2.2.3.0,  DEFAULT,      "Battery Minutes Left" <!-- upsAdvBatteryRunTimeRemaining -->
timeLeft,       substr("$batMin",0,-11),        CALCULATION
replaceDate,    1.3.6.1.4.1.318.1.1.1.2.1.3.0,  DEFAULT,      "" <!-- upsBasicBatteryLastReplaceDate -->
replaceCode,    1.3.6.1.4.1.318.1.1.1.2.2.4.0,  DEFAULT,      "{noBatteryNeedsReplacing(1),batteryNeedsReplacing(2)}" <!-- upsAdvBatteryReplaceIndicator -->
replaceStatus,  ($replaceCode=1)?"still functioning":"\\1b\\needs to be replaced\\3p\\", CALCULATION

<!-- input status -->
inVolt,   1.3.6.1.4.1.318.1.1.1.3.2.1.0,  DEFAULT,      "Input Voltage (Volts)" <!-- upsAdvInputLineVoltage -->
inVMax,   1.3.6.1.4.1.318.1.1.1.3.2.2.0,  DEFAULT,      "" <!-- upsAdvInputMaxLineVoltage -->
inVMin,   1.3.6.1.4.1.318.1.1.1.3.2.3.0,  DEFAULT,      "" <!-- upsAdvInputMinLineVoltage -->
inRange,  "$inVMin-${inVMax}V",           CALCULATION,  ""
inFreq,   1.3.6.1.4.1.318.1.1.1.3.2.4.0,  DEFAULT,      "Input Frequency (Hz)" <!-- upsAdvInputFrequency -->

<!-- output status -->
ouLoad,  1.3.6.1.4.1.318.1.1.1.4.2.3.0,  DEFAULT, "Output Load (%)" <!-- upsAdvOutputLoad -->
ouFreq,  1.3.6.1.4.1.318.1.1.1.4.2.2.0,  DEFAULT, "Output Frequency (Hz)" <!-- upsAdvOutputFrequency -->
ouVolt,  1.3.6.1.4.1.318.1.1.1.4.2.1.0,  DEFAULT, "Output Voltage (Volts)" <!-- upsAdvOutputVoltage -->
ouAmps,  1.3.6.1.4.1.318.1.1.1.4.2.4.0,  DEFAULT, "Output Current (Amps)" <!-- upsAdvOutputCurrent -->

<!-- Code-to-Text Conversions -->
batCode,      1.3.6.1.4.1.318.1.1.1.2.1.1.0,   DEFAULT, "upsBasicBatteryStatus" 
<!-- unknown(1),batteryNormal(2),batteryLow(3) -->
batStatus,    ($batCode=1)?"Unknown":($batCode=2)?"Normal":($batCode=3)?"Low":"Unknown Battery Status Code", CALCULATION
outCode,      1.3.6.1.4.1.318.1.1.1.4.1.1.0,   DEFAULT, "upsBasicOutputStatus" 
<!-- {unknown(1),onLine(2),onBattery(3),onSmartBoost(4),timedSleeping(5),softwareBypass(6),off(7),rebooting(8),switchedBypass(9),hardwareFailureBypass(10),sleepingUntilPowerReturn(11),onSmartTrim(12)} -->
out1,        ($outCode=1)?"Unknown":($outCode=2)?"On Line (Not On Battery)":($outCode=3)?"On Battery":($outCode=4)?"On Smart Boost":($outCode=5)?"Timed Sleeping":($outCode=6)?"Software Bypass":"(!)Unknown Output Status Code", CALCULATION
out2,        ($outCode=7)?"Off":($outCode=8)?"Rebooting":($outCode=9)?"Switched Bypass":($outCode=10)?"Hardware Failure Bypass":($outCode=11)?"Sleeping Until Power Return":($outCode=11)?"On Smart Trim":"(!)Unknown Output Status Code", CALCULATION
outputStatus,  ($outCode<7)?"$out1":"$out2",   CALCULATION
failCode,	   1.3.6.1.4.1.318.1.1.1.3.2.5.0,  DEFAULT,  "inputLineFailCause" <!-- code describing last input failure -->
<!-- {noTransfer(1),highLineVoltage(2),brownout(3),blackout(4),smallMomentarySag(5),deepMomentarySag(6),smallMomentarySpike(7),largeMomentarySpike(8),selfTest(9),rateOfVoltageChnage(10)} -->
fail1,        ($failCode=1)?"No Transfer":($failCode=2)?"High Line Voltage":($failCode=3)?"Brown Out":($failCode=4)?"Black Out":($failCode=5)?"Small Brief Sag":($failCode=6)?"Deep Brief Sag":"(!)Unknown Input Failure Code",  CALCULATION
fail2,        ($failCode=7)?"Small Brief Spike":($failCode=8)?"Large Brief Spike":($failCode=9)?"Self Test":($failCode=10)?"Rate of Voltage Change":"(!)Unknown Input Failure Code",  CALCULATION
failCause,    ($failCode<7)?"$fail1":"$fail2", CALCULATION

<!-- Temperature variables -->
units, "${Units of Temperature (C / F)}", CALCULATION
tempAlarmLow,    ${Alarm Threshold - Low Temp}, CALCULATION
tempWarningLow,  ${Warning Threshold - Low Temp}, CALCULATION
tempWarningHigh, ${Warning Threshold - High Temp}, CALCULATION
tempAlarmHigh,   ${Alarm Threshold - High Temp}, CALCULATION
tempRange,      "$tempWarningLow-$tempWarningHigh $batUnits", CALCULATION

unitsC,   "째C", CALCULATION
unitsF,   "째F", CALCULATION
batUnits, ("$units" == "C")?"$unitsC":"$unitsF", CALCULATION
batTemp,  ("$batUnits" == "$unitsC")?$batTempC:$batTempF, CALCULATION,  "Battery Temperature ($batUnits)"
</snmp-device-variables>

<snmp-device-thresholds>
warning:  ($outCode = 4)||($outCode = 12)  "Abnormal Input, Status = $outputStatus"
warning:  $batTemp < $tempWarningLow || $batTemp > $tempWarningHigh  "UPS battery temperature Warning: $batTemp $batUnits (Optimal Range: $tempRange)"
alarm:    $outCode = 3                     "UPS has been running on battery for $secs seconds."
alarm:    $replaceCode = 2                 "Battery needs to be replaced."
alarm:    ($outCode <> 2)&&($outCode <> 4)&&($outCode <> 12)  "$outputStatus"
alarm:    $batTemp < $tempAlarmLow || $batTemp > $tempAlarmHigh  "UPS battery temperature Alarm: $batTemp $batUnits (Optimal Range: $tempRange)"
alarm:    $batUnits <> $unitsC && $batUnits <> $unitsF "Bad Parameter: Units of Temperature Must be either C or F"
</snmp-device-thresholds>

<snmp-device-display>
\p\\bM5\APC UPS (Single Phase) Information\p\\pM0\
\p\\pM4\   Model: \p\\pG0\$model\p\\pM0\
\p\\pM4\Firmware: \p\\pG0\$firmware\p\\pM0\
\p\\pM4\  Status: \p\\bG0\$outputStatus\p\\pM0\
\p\\pM4\ Battery: \p\\bG4\${chartable: #.: $leftCharge}\p\\bG4\ %\p\\iG3\ Charge,  \p\\bG3\$timeLeft\p\\iG3\ left.\p\\pM0\
\p\\pM4\          \p\\iG3\Battery temperature is  \p\\pG4\$batTempC\p\\iG3\ $unitsC  /  \p\\pG4\$batTempF\p\\iG3\ $unitsF.\p\\pM0\
\p\\pM4\          \p\\iG3\Last replaced on  \p\\bG3\$replaceDate\p\\iG3\ and $replaceStatus.\p\\pM0\
\p\\pM4\  Output: \p\\bG4\$ouLoad\p\\bG4\ %\p\\iG3\ Load;  \p\\pG4\${chartable: #.: $ouVolt}\p\\iG3\ Volts;  \p\\pG4\${chartable: #.: $ouFreq}\p\\iG3\ Hz;  \p\\pG4\${chartable: #.#: $ouAmps}\p\\iG3\ Amps.\p\\pM0\
\p\\pM4\   Input: \p\\pG4\${chartable: #.: $inVolt}\p\\iG3\ Volts (\p\\bG3\$inRange\p\\iG3\ over last minute); \p\\pG4\${chartable: #.: $ouFreq}\p\\iG3\ Hz.\p\\pM0\
\p\\pM4\          \p\\iG3\Last input failure was a  \p\\bG3\$failCause\p\\pG0\.\p\\pM0\

\p\\bG3\Bugs or Requests? \p\\iG3\\U=mailto:upsbundle@intermapper.com\Please contact us.\p\\pM0\
</snmp-device-display>


<datasets>
	$leftCharge,	'pctcharge',	"percent",		"true",		"Percent Charge"
	$batMin,		'batttimeleft',	"min",			"true",		"Time left on battery"
	$inVolt,		'involts',		"volts",		"true",		"Input Voltage"
	$batTempC,		'temperature',	"degrees C",	"true",		"Battery Temperature (째C)"
</datasets>
