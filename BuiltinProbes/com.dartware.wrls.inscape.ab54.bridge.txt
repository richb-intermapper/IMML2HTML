<!-- 
	Inscape AB54 Bridge (com.dartware.wrls.inscape.ab54.bridge)
	Copyright (c) 2007 Dartware, LLC. All rights reserved.
-->

<header>
	type			= 	"tcp-script"
	package			= 	"com.dartware"
	probe_name		=	"wrls.inscape.ab54.bridge"
	human_name		=	"AirEther AB54 Series AP (Bridge Mode)"
	version			= 	"1.0"
	address_type		= 	"IP"
	port_number		=	"80"
	equiv_class		= 	"WRLS"
	display_name		=	"Wireless/Inscape Data/AirEther AB54 Series AP (Bridge Mode)"
	url_hint		=	"http://${ADDRESS}:${PORT}/"
</header>

<description>

\GB\AirEther AB54 Series AP (Bridge Mode)\P0\

This probe monitors \U2=http://www.inscapedata.com//\Inscape Data\P0\'s AB54, AB54E, AB54E Pro Multifunctional AP in Point to Point or Point to Multipoint Bridge Mode.

\i\User\p\ is the name of the administrator.

\i\Password\p\ is the password for the administrator.

\i\Port\p\ is the Web interface's HTTP port.

</description>

<parameters>
	"User"				=		""
	"Password*"			=		""
	"RSSI Warning <"		=		"-80"
	"RSSI Alarm <"			=		"-90"
</parameters>

<script>
CONN #60
FAIL @FAILED

WAIT #60 @IDLE (idle timeout in secs)
DISC @DISCONNECT
SEND "GET /A_WirelessStationList.htm HTTP/1.0\r\n"
CHCK "${_REMOTEADDRESS}" else goto #+3
SEND "Host: ${_REMOTEADDRESS}\r\n"
SEND "User-Agent: InterMapper/${_VERSION}\r\n"
CHCK "${User}${Password*}" ELSE #+2
SEND "Authorization: Basic ${_BASE64:${User}:${Password*}}\r\n"
SEND "\r\n"

MTCH "HTTP/"i else goto @UNEXPECTED_GREETING
MTCH "200" else goto @UNAVAIL_GET_RESPONSE

STOR "num_stations" "0"
STOR "^station_list" ""

# scan for first "TableTitle" (in <tr> element for column headers)
EXPT "TableTitle" else @NO_MATCH
# scan for end of <tr> tag
EXPT "</tr>"i else @NO_MATCH
# scan for end of --> comment
EXPT "-->"i else @NO_MATCH

DISC @GET_SYSTEMSUMMARY
@LOOP:
NEXT
EXPT "<td[^>]*>\\s*([^<>]+)\\s*</td>"ir
STOR "nameLen" "${_LENGTH:${1}}"
#If the name is longer than the width of the column, then truncate it
NBGT #${nameLen} #20 #+6
NBNE #${nameLen} #20 #+2
#name length is exactly the same as the column width
GOTO #+5
#else if the name is shorter than the width, then pad it out to the column's width
EVAL ${padding} := substr( "                    ", 0, 20 - ${nameLen} )
SCAT "1" "${padding}"
GOTO #+2
#truncate the string down to the width of the column
EVAL ${1} := substr( "${1}", 0, 20 )

#Station ID
SCAT "^station_list" "${1}"

NEXT
#MAC
EXPT "<td[^>]*>.*<a[^>]*>\\s*(.+)\\s*</a[^>]*>\\s*</td>"ir
SCAT "^station_list" " ${1} "

STOR "mac_${num_stations}" "${1}"
EVAL ${foo} := (${1} =~ "([0-9a-fA-F_]*):(.+)")
NBNE #${foo} #1 #+3
STOR "1" "${1}_${2}"
GOTO #-3
STOR "rssi_${num_stations}" "${1}"

NEXT
#Status
EXPT "<td[^>]*>\\s*([^<]+)\\s*"ir
STOR "nameLen" "${_LENGTH:${1}}"
#If the status is longer than the width of the column, then truncate it
NBGT #${nameLen} #12 #+6
NBNE #${nameLen} #12 #+2
#name length is exactly the same as the column width
GOTO #+5
#else if the name is shorter than the width, then pad it out to the column's width
EVAL ${padding} := substr( "                    ", 0, (12 - ${nameLen}) / 2 )
STOR "1" "${padding}${1}${padding}"
GOTO #+2
#truncate the string down to the width of the column
EVAL ${1} := substr( "${1}", 0, 12 )
SCAT "^station_list" "${1}"

NEXT
#RSSI
EXPT "<td[^>]*>\\s*(-?[0-9]+)\\s*</td>"ir
STOR "${rssi_${num_stations}}" "${1}"
SCAT "^station_list" "    $${${rssi_${num_stations}}}\n"

NADD "num_stations" #1

GOTO @LOOP

@GET_SYSTEMSUMMARY:
STOR "^mac" "<unknown>"
STOR "^name" "<unknown>"

DISC @DISCONNECT
RCON
SEND "GET /B_SystemSummary.htm HTTP/1.0\r\n"
CHCK "${_REMOTEADDRESS}" else goto #+3
SEND "Host: ${_REMOTEADDRESS}\r\n"
SEND "User-Agent: InterMapper/${_VERSION}\r\n"
CHCK "${User}${Password*}" ELSE #+2
SEND "Authorization: Basic ${_BASE64:${User}:${Password*}}\r\n"
SEND "\r\n"

MTCH "HTTP/"i else goto @UNEXPECTED_GREETING
MTCH "200" else goto @DONE

#parse out Wireless MAC and System Name here
STOR "key" ""
STOR "value" ""
EXPT "<th[^>]*>\\s*([^<>]+)\\s*"ir else @NO_MATCH

DISC @DONE

@SUMMARY_LOOP:
STOR "key" "${1}"
@SUMMARY_LOOP_GET_VALUE:
NEXT
MTCH "<td[^>]*>\\s*([^<>]*)\\s*</td>"ir ELSE #+2
GOTO #+5
#Some values may not have trailing </td> on the same line
MTCH "<td[^>]*>\\s*([^<>]*)\\s*"ir ELSE  #+2
GOTO #+3
#Some keys may stretch across multiple lines (trailing </th> may not be on the same line)
MTCH "[^<]*</th>\\s*"ir ELSE @SUMMARY_LOOP_NEXT
GOTO @SUMMARY_LOOP_GET_VALUE
STOR "value" "${1}"

#remove trailing spaces
EVAL ${1} =~ "^(.*)\\s$"
EVAL ${1} =~ "^(.*)\&nbsp;$"
EVAL ${foo} := ("${value}" == "${1}")
NBNE #${foo} #1 #-4

SBNE "${key}" "Wireless MAC Address"i #+3
STOR "^mac" "${value}"
GOTO @SUMMARY_LOOP_NEXT
SBNE "${key}" "System Name"i #+3
STOR "^name" "${value}"
GOTO @SUMMARY_LOOP_NEXT
SBNE "${key}" "Operation Mode"i #+3
STOR "^mode" "${value}"
GOTO @SUMMARY_LOOP_NEXT
SBNE "${key}" "Wireless Mode"i #+3
STOR "^wireless_mode" "${value}"
GOTO @SUMMARY_LOOP_NEXT
SBNE "${key}" "Wireless Network Name"i #+3
STOR "^ssid" "${value}"
GOTO @SUMMARY_LOOP_NEXT
SBNE "${key}" "Channel / Frequency"i #+3
STOR "^channel" "${value}"
GOTO @SUMMARY_LOOP_NEXT

@SUMMARY_LOOP_NEXT:
NEXT
EXPT "<th[^>]*>\\s*([^<>]+)\\s*"ir else goto @DONE
GOTO @SUMMARY_LOOP

@DONE:
#if no stations were found, then set ^station_list to something user-friendly.
NBGT #${num_stations} #0 #+2
STOR "^station_list" "\I3\No stations connected.\P\\n"

#check RSSI thresholds
#loop over all stations' RSSI values!

#for (counter = 0; counter < num_stations; counter++) {
#	if ( "RSSI Warning <" < "${${rssi_${num_stations}}}" ) {
#		if ( "RSSI Alarm <" < "${${rssi_${num_stations}}}" ) {
#			ALARM
#		} else {
#			WARNING
#		}
#	}
#}
STOR "counter" "0"
STOR "^probe_status" ""
STOR "^reason" ""
@CHECK_ALL_RSSI:
NBGT #${num_stations} #${counter} #+2
GOTO @DONE_CHECK_ALL_RSSI

STOR "rssi" "${${rssi_${counter}}}"
NBGT #${rssi} #${RSSI Warning <} @NEXT_STATION
NBNE #${rssi} #${RSSI Warning <} #+2
GOTO @NEXT_STATION
SCAT "^reason" "\n${mac_${counter}} RSSI = ${rssi} dBm"
CHCK "${^probe_status}" else goto #+2
GOTO #+2
STOR "^probe_status" "WARN"

NBGT #${rssi} #${RSSI Alarm <} @NEXT_STATION
NBNE #${rssi} #${RSSI Alarm <} #+2
GOTO @NEXT_STATION
STOR "^probe_status" "ALRM"

@NEXT_STATION:
NADD "counter" #1
GOTO @CHECK_ALL_RSSI

@DONE_CHECK_ALL_RSSI:
CHCK "${^probe_status}" else goto #+2
DONE ${^probe_status} "${^reason}"

DONE OKAY

@NO_MATCH:
DONE WARN "Unrecognized response from device."

@IDLE:
DONE DOWN "No data for ${_IDLETIMEOUT} seconds. [Line ${_IDLELINE}]"

@UNEXPECTED_GREETING:
DONE DOWN "Unexpected greeting from port ${_REMOTEPORT}. (${_LINE:50})"

@UNAVAIL_GET_RESPONSE:
MTCH m"50[0-9]" else goto @BAD_GET_RESPONSE
DONE DOWN "${_LINE:50}"

@BAD_GET_RESPONSE:
MTCH "201" ELSE #+2
DONE WARN "201 Created"
MTCH "202" ELSE #+2
DONE WARN "202 Accepted"
MTCH "204" ELSE #+2
DONE WARN "204 No Content"
MTCH "301" ELSE #+2
DONE WARN "301 Moved Permanently"
MTCH "302" ELSE #+2
DONE WARN "302 Moved Temporarily"
MTCH "304" ELSE #+2
DONE WARN "304 Not Modified"
MTCH "400" ELSE #+2
DONE WARN "400 Bad Request"
MTCH "401" ELSE #+2
DONE WARN "401 Unauthorized"
MTCH "403" ELSE #+2
DONE WARN "Invalid login."
MTCH "404" ELSE #+2
DONE WARN "Unrecognized response (404)."
MTCH "500" ELSE #+2
DONE ALRM "500 Internal Server Error"
MTCH "501" ELSE #+2
DONE ALRM "501 Not Implemented"
MTCH "502" ELSE #+2
DONE ALRM "502 Bad Gateway"
MTCH "503" ELSE #+2
DONE ALRM "503 Service Unavailable"
DONE ALRM "Unknown Error Code ${_LINE:4}"

@DISCONNECT:
DONE DOWN "Disconnected from port ${_REMOTEPORT} after ${_SECSCONNECTED} seconds."

@FAILED:
#use default error message in 4.2.1 and later
DONE DOWN

</script>

#station list columns currently have hardwired widths:
# 20 19 12 12
<script-output>
\B5\AirEther AB54 Series AP (Bridge Mode) Statistics\P0\
       \4\Operation Mode:\0\ ${^mode}
 \4\Wireless MAC Address:\0\ ${^mac}
        \4\Wireless Mode:\0\ ${^wireless_mode}
          \4\System Name:\0\ ${^name}
              \4\Channel:\0\ ${^channel}
                 \4\SSID:\0\ ${^ssid}
\B5\Link Status:\P0\
     \4\Station ID         Mac Address       Status    RSSI (dBm)\0\
${^station_list}
</script-output>
