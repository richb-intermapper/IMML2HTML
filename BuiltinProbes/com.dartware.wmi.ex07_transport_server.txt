<!-- 
Command Line WMI Probe to check MS Exchange 2007 Transport Server (com.dartware.wmi.ex07_transport_server) 
Copyright (c) 2010 Dartware, LLC. All rights reserved. 
--> 

<header> 
	type			=	"cmd-line" 
	package			=	"com.dartware" 
	probe_name		=	"wmi.ex07_transport_server" 
	human_name		=	"WMI MSExchange 2007 Hub Transport Server" 
	version			=	"1.4" 
	address_type	=	"IP"
	display_name	=	"WMI/WMI MSExchange 2007 Hub Transport Server"
	visible_in 		=	"Windows"
	flags			=	"NTCREDENTIALS"	
</header> 

<description> 
\GB\WMI MSExchange 2007 Hub Transport Server\p\ 

This probe uses WMI to retrieve performance information about the delivery queues on a MS Exchange 2007 Hub Transport Server.  Specifically, it queries the Win32_PerfFormattedData_MSExchangeTransportQueues_MSExchangeTransportQueues class to collect a variety of queue statistics and then compares them to the criteria you set.  The default criteria for warning and critical conditions are taken from the Microsoft TechNet article \u2=http://technet.microsoft.com/en-us/library/bb201704.aspx\Monitoring Hub Transport Servers\p0\.

The User parameter may be a local user on the target host, or may take the form of "domain\\user" for a domain login.  Leave it blank if authentication is not required, such as when the target is the localhost.

InterMapper invokes the ex07_transport.vbs companion script which was placed in the Tools folder of the InterMapper Settings folder when this probe was loaded.  It uses the exit value to set the condition of the device.

</description> 

<parameters>
	"Warning Aggregate Delivery"="3000"
	"Critical Aggregate Delivery"="5000"
	"Warning Active Mailbox Delivery"=""
	"Critical Active Mailbox Delivery"="250"
	"Warning Active Remote Delivery"=""
	"Critical Active Remote Delivery"="250"
	"Warning Active Non-Smtp Delivery"=""
	"Critical Active Non-Smtp Delivery"="250"
	"Warning Retry Mailbox Delivery"=""
	"Critical Retry Mailbox Delivery"="100"
	"Warning Retry Remote Delivery"=""
	"Critical Retry Remote Delivery"="100"
	"Warning Retry Non-Smtp Delivery"=""
	"Critical Retry Non-Smtp Delivery"="100"
	"Warning Submission Delivery"=""
	"Critical Submission Delivery"="100"
	"Warning Unreachable Delivery"=""
	"Critical Unreachable Delivery"="100"
	"Warning Largest Delivery Delivery"=""
	"Critical Largest Delivery Delivery"="200"
	"Warning Poison Delivery"="1"
	"Critical Poison Delivery"="5"
	User=""
	"Password*"=""
	"Timeout (sec)"="60"
</parameters> 


<command-line> 
	-- Empty path forces the InterMapper Settings:Tools directory
	path="" 
	cmd="${CSCRIPT} ex07_transport.vbs"
	arg="-h ${address} -w ${Warning Aggregate Delivery},${Warning Active Mailbox Delivery},${Warning Active Remote Delivery},${Warning Active Non-Smtp Delivery},${Warning Retry Mailbox Delivery},${Warning Retry Remote Delivery},${Warning Retry Non-Smtp Delivery},${Warning Submission Delivery},${Warning Unreachable Delivery},${Warning Largest Delivery Delivery},${Warning Poison Delivery} -c ${Critical Aggregate Delivery},${Critical Active Mailbox Delivery},${Critical Active Remote Delivery},${Critical Active Non-Smtp Delivery},${Critical Retry Mailbox Delivery},${Critical Retry Remote Delivery},${Critical Retry Non-Smtp Delivery},${Critical Submission Delivery},${Critical Unreachable Delivery},${Critical Largest Delivery Delivery},${Critical Poison Delivery}"
	input = "${User} ${Password*}"
	timeout = ${Timeout (sec)}
</command-line> 

<command-exit>
	down:${EXIT_CODE}=3 
	critical:${EXIT_CODE}=2 
	alarm:${EXIT_CODE}=1 
	okay:${EXIT_CODE}=0 
</command-exit> 

<command-display>
${^stdout}
</command-display> 

<tool:ex07_transport.vbs>
'Command Line WMI Probe for MS Exchange 2007 Hub Transport Server (to be used with com.dartware.wmi.ex07_transport_server)
'Copyright (c) 2009 Dartware, LLC. All rights reserved. 

On Error Resume Next

' get args up to next switch in case there are spaces in list
FUNCTION GetNextArg(j, nargs)
	arg = ""
	do until (j = nargs-1)
		if (instr(wscript.arguments(j+1), "-") = 1) then
			exit do
		else
			arg = arg & wscript.arguments(j+1)
			j = j + 1
		end if
	loop
	GetNextArg = arg
END FUNCTION

FUNCTION CheckError(reasonStr)
	if (err.number <> 0) then
		reasonStr = vbNewLine & reasonStr & "Error #" & CStr(Err.Number) & " " & Err.Description
		wscript.echo "\{reason:=""" & reasonStr & """}"
		wscript.quit(3)
	end if
END FUNCTION

' Collect our arguments
host = ""
user = ""
pass = ""
crit = ""
warn = ""
verbose = False		' for testing only

numargs = wscript.arguments.count
for i=0 to numargs-1
	test = wscript.arguments(i)
	if (test = "-v") then verbose = True
	if (test = "-host") OR (test = "-h") then
		host = GetNextArg(i, numargs)
	end if
	if (test = "-user") OR (test = "-u") then
		user = GetNextArg(i, numargs)
	end if
	if (test = "-pass") OR (test = "-p") then
		pass = GetNextArg(i, numargs)
	end if
	if (test = "-warn") OR (test = "-w") then
		warn = GetNextArg(i, numargs)
	end if
	if (test = "-crit") OR (test = "-c") then
		crit = GetNextArg(i, numargs)
	end if
next

' Read username and password from stdin
if  not WScript.StdIn.AtEndOfStream then
	inpStr = WScript.StdIn.ReadLine
end if
if verbose then wscript.echo "stdin: " & inpStr

dim cred
cred = split(inpStr, " ")
user = cred(0)
pass = cred(1) 

if (host = "" or (crit = "" and warn = "")) then
	Err.Raise vbObjectError + 1, "", "Error processing arguments"
	CheckError("")
end if

dim warning
dim critical

warning = split(warn,",")
critical = split(crit,",")
if verbose then wscript.echo "warn: " & ubound(warning) & "   crit: " & ubound(critical)

' Build query
query = "SELECT * FROM Win32_PerfFormattedData_MSExchangeTransportQueues_MSExchangeTransportQueues WHERE Name = '_Total'"
if verbose then wscript.echo "query = " & query

' Connect with target via WMI
Set objSWbemLocator = CreateObject("WbemScripting.SWbemLocator")
CheckError("")

if (user = "") or (lcase(user) = "none") then		' no authentication needed
	Set objWMIService = GetObject("winmgmts:" & "{impersonationLevel=impersonate}!\\" & host & "\root\cimv2") 
	CheckError("")
else						' authenticate with user/pass
	user = Replace(user,"\\","\")
	Set objWMIService = objSWbemLocator.ConnectServer (host, "\root\cimv2", user, pass)
	CheckError("")
	objWMIService.Security_.ImpersonationLevel = 3
end if

' Execute query
Set colItems = objWMIService.ExecQuery(query,,48)
CheckError("")

For Each objItem in colItems
	AggregateDelivery = objitem.AggregateDeliveryQueueLengthAllQueues
	ActiveMailboxDelivery = objitem.ActiveMailboxDeliveryQueueLength
	ActiveRemoteDelivery = objitem.ActiveRemoteDeliveryQueueLength
	ActiveNonSmtpDelivery = objitem.ActiveNonSmtpDeliveryQueueLength
	RetryMailboxDelivery = objitem.RetryMailboxDeliveryQueueLength
	RetryRemoteDelivery = objitem.RetryRemoteDeliveryQueueLength
	RetryNonSmtpDelivery = objitem.RetryNonSmtpDeliveryQueueLength
	Submission = objitem.SubmissionQueueLength
	Unreachable = objitem.UnreachableQueueLength
	LargestDelivery = objitem.LargestDeliveryQueueLength
	Poison = objitem.PoisonQueueLength
Next
CheckError("")

' Evaluate criteria to set returncode
criticalreason = ""
warningreason = ""
returncode = 0

if (verbose) then 
	WScript.Echo "Warning: " & "|" & cstr(warning(0)) & "|" & cstr(warning(1)) & "|" & cstr(warning(2)) & "|"
	WScript.Echo "Critical: " & "|" & len(critical(0)) & "|" & cstr(critical(1)) & "|" & len(critical(2)) & "|"
end if

if (len(critical(0)) > 0) then
	if (AggregateDelivery > cint(critical(0))) then 
		criticalreason = criticalreason & vbNewLine & "Aggregate Delivery Queue Length (All Queues) is above " & critical(0) & "."
	end if
end if
if (len(warning(0)) > 0) then
	if (AggregateDelivery > cint(warning(0))) then 
		warningreason = warningreason & vbNewLine & "Aggregate Delivery Queue Length (All Queues) is above " & warning(0) & "."
	end if
end if

if (len(critical(1)) > 0) then 
	if (ActiveMailboxDelivery > cint(critical(1))) then 
		criticalreason = criticalreason & vbNewLine & "Active Mailbox Delivery Queue Length is above " & critical(1) & "."
	end if
end if
if (len(warning(1)) > 0) then
	if (ActiveMailboxDelivery > cint(warning(1))) then 
		warningreason = warningreason & vbNewLine & "Active Mailbox Delivery Queue Length is above " & warning(1) & "."
	end if
end if

if (len(critical(2)) > 0) then
	if (ActiveRemoteDelivery > cdbl(critical(2))) then 
		criticalreason = criticalreason & vbNewLine & "Active Remote Delivery Queue Length is above " & critical(2) & "."
	end if
end if
if (len(warning(2)) > 0) then
	if (ActiveRemoteDelivery > cdbl(warning(2))) then 
		warningreason = warningreason & vbNewLine & "Active Remote Delivery Queue Length is above " & warning(2) & "."
	end if
end if

if (len(critical(3)) > 0) then
	if (ActiveNonSmtpDelivery > cdbl(critical(3))) then 
		criticalreason = criticalreason & vbNewLine & "Active Non-Smtp Delivery Queue Length is above " & critical(3) & "."
	end if
end if
if (len(warning(3)) > 0) then
	if (ActiveNonSmtpDelivery > cdbl(warning(3))) then 
		warningreason = warningreason & vbNewLine & "Active Non-Smtp Delivery Queue Length is above " & warning(3) & "."
	end if
end if

if (len(critical(4)) > 0) then
	if (RetryMailboxDelivery > cdbl(critical(4))) then 
		criticalreason = criticalreason & vbNewLine & "Retry Mailbox Delivery Queue Length is above " & critical(4) & "."
	end if
end if
if (len(warning(4)) > 0) then
	if (RetryMailboxDelivery > cdbl(warning(4))) then 
		warningreason = warningreason & vbNewLine & "Retry Mailbox Delivery Queue Length is above " & warning(4) & "."
	end if
end if

if (len(critical(5)) > 0) then
	if (RetryRemoteDelivery > cdbl(critical(5))) then 
		criticalreason = criticalreason & vbNewLine & "Retry Remote Delivery Queue Length is above " & critical(5) & "."
	end if
end if
if (len(warning(5)) > 0) then
	if (RetryRemoteDelivery > cdbl(warning(5))) then 
		warningreason = warningreason & vbNewLine & "Retry Remote Delivery Queue Length is above " & warning(5) & "."
	end if
end if

if (len(critical(6)) > 0) then
	if (RetryNonSmtpDelivery > cdbl(critical(6))) then 
		criticalreason = criticalreason & vbNewLine & "Retry Non-Smtp Delivery Queue Length is above " & critical(6) & "."
	end if
end if
if (len(warning(6)) > 0) then
	if (RetryNonSmtpDelivery > cdbl(warning(6))) then 
		warningreason = warningreason & vbNewLine & "Retry Non-Smtp Delivery Queue Length is above " & warning(6) & "."
	end if
end if

if (len(critical(7)) > 0) then
	if (Submission > cdbl(critical(7))) then 
		criticalreason = criticalreason & vbNewLine & "Submission Queue Length is above " & critical(7) & "."
	end if
end if
if (len(warning(7)) > 0) then
	if (Submission > cdbl(warning(7))) then 
		warningreason = warningreason & vbNewLine & "Submission Queue Length " & warning(7) & "."
	end if
end if

if (len(critical(8)) > 0) then
	if (Unreachable > cdbl(critical(8))) then 
		criticalreason = criticalreason & vbNewLine & "Unreachable Queue Length is above " & critical(8) & "."
	end if
end if
if (len(warning(8)) > 0) then
	if (Unreachable > cdbl(warning(8))) then 
		warningreason = warningreason & vbNewLine & "Unreachable Queue Length is above " & warning(8) & "."
	end if
end if

if (len(critical(9)) > 0) then
	if (LargestDelivery > cdbl(critical(9))) then 
		criticalreason = criticalreason & vbNewLine & "Largest Delivery Queue Length is above " & critical(9) & "."
	end if
end if
if (len(warning(9)) > 0) then
	if (LargestDelivery > cdbl(warning(9))) then 
		warningreason = warningreason & vbNewLine & "Largest Delivery Queue Length is above " & warning(9) & "."
	end if
end if

if (len(critical(10)) > 0) then
	if (Poison > cdbl(critical(10))) then 
		criticalreason = criticalreason & vbNewLine & "Poison Queue Length is above " & critical(10) & "."
	end if
end if
if (len(warning(10)) > 0) then
	if (Poison > cdbl(warning(10))) then 
		warningreason = warningreason & vbNewLine & "Poison Queue Length is above " & warning(10) & "."
	end if
end if

if (criticalreason <> "") then
	reason = criticalreason
	returncode = 2
elseif (warningreason <> "") then
	reason = warningreason
	returncode = 1
end if

' Build data output
output= "\{"
output = output & "AggregateDelivery:=" & formatnumber(AggregateDelivery,0,vbTrue,vbFalse,vbFalse) & ","
output = output & "ActiveMailboxDelivery:=" & formatnumber(ActiveMailboxDelivery,0,vbTrue,vbFalse,vbFalse) & ","
output = output & "ActiveRemoteDelivery:=" & formatnumber(ActiveRemoteDelivery,0,vbTrue,vbFalse,vbFalse) & ","
output = output & "ActiveNonSmtpDelivery:=" & formatnumber(ActiveNonSmtpDelivery,0,vbTrue,vbFalse,vbFalse) & ","
output = output & "RetryMailboxDelivery:=" & formatnumber(RetryMailboxDelivery,0,vbTrue,vbFalse,vbFalse) & ","
output = output & "RetryRemoteDelivery:=" & formatnumber(RetryRemoteDelivery,0,vbTrue,vbFalse,vbFalse) & ","
output = output & "RetryNonSmtpDelivery:=" & formatnumber(RetryNonSmtpDelivery,0,vbTrue,vbFalse,vbFalse) & ","
output = output & "Submission:=" & formatnumber(Submission,0,vbTrue,vbFalse,vbFalse) & ","
output = output & "Unreachable:=" & formatnumber(Unreachable,0,vbTrue,vbFalse,vbFalse) & ","
output = output & "LargestDelivery:=" & formatnumber(LargestDelivery,0,vbTrue,vbFalse,vbFalse) & ","
output = output & "Poison:=" & formatnumber(Poison,0,vbTrue,vbFalse,vbFalse) & ","
output = output & "reason:=""" & reason & """}"

wscript.echo output & "\B5\WMI MSExchange 2007 Hub Transport Server\P\"
wscript.echo "  \4\Aggregate Delivery Queue Length (All Queues):\0\  $AggregateDelivery"
wscript.echo "  \4\Active Mailbox Delivery Queue Length:\0\          $ActiveMailboxDelivery"
wscript.echo "  \4\Active Remote Delivery Queue Length:\0\           $ActiveRemoteDelivery"
wscript.echo "  \4\Active Non-Smtp Delivery Queue Length:\0\         $ActiveNonSmtpDelivery"
wscript.echo "  \4\Retry Mailbox Delivery Queue Length:\0\           $RetryMailboxDelivery"
wscript.echo "  \4\Retry Remote Delivery Queue Length:\0\            $RetryRemoteDelivery"
wscript.echo "  \4\Retry Non-Smtp Delivery Queue Length:\0\          $RetryNonSmtpDelivery"
wscript.echo "  \4\Submission Queue Length:\0\                       $Submission"
wscript.echo "  \4\Unreachable Queue Length:\0\                      $Unreachable"
wscript.echo "  \4\Largest Delivery Queue Length:\0\                 $LargestDelivery"
wscript.echo "  \4\Poison Queue Length:\0\                           $Poison"

' Done
wscript.quit(returncode)
</tool:ex07_transport.vbs>